.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __vblank_locals 0
.define __main_locals 0

.SECTION ".vblanktext_0x0" SUPERFREE

vblank:
.ifgr __vblank_locals 0
tsa
sec
sbc #__vblank_locals
tas
.endif
jsr.l spcProcess
jsr.l WaitForVBlank
.ifgr __vblank_locals 0
tsa
clc
adc #__vblank_locals
tas
.endif
rtl
.ENDS

.SECTION ".maintext_0x1" SUPERFREE

main:
.ifgr __main_locals 0
tsa
sec
sbc #__main_locals
tas
.endif
jsr.l initSpc
lda.w #:bg1_m_end
lda.w #bg1_m_end + 0
sta.b tcc__r0
lda.w #:bg1_m
lda.w #bg1_m + 0
sta.b tcc__r1
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
pea.w 29696
sep #$20
lda #0
pha
rep #$20
pei (tcc__r0)
pea.w :bg1_m
pea.w bg1_m + 0
sep #$20
lda #0
pha
rep #$20
jsr.l bgInitMapSet
tsa
clc
adc #10
tas
lda.w #:bg1_tiles_end
sta.b tcc__r0h
lda.w #bg1_tiles_end + 0
sta.b tcc__r0
lda.w #:bg1_tiles
lda.w #bg1_tiles + 0
sta.b tcc__r1
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
lda.w #:bg1_p_end
lda.w #bg1_p_end + 0
sta.b tcc__r1
lda.w #:bg1_p
lda.w #bg1_p + 0
sta.b tcc__r2
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
pea.w 0
pea.w 16
pei (tcc__r1)
pei (tcc__r0)
sep #$20
lda #1
pha
rep #$20
pea.w :bg1_p
pea.w bg1_p + 0
pea.w :bg1_tiles
pea.w bg1_tiles + 0
sep #$20
lda #0
pha
rep #$20
jsr.l bgInitTileSet
tsa
clc
adc #18
tas
lda.w #:bg2_m_end
lda.w #bg2_m_end + 0
sta.b tcc__r0
lda.w #:bg2_m
lda.w #bg2_m + 0
sta.b tcc__r1
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
pea.w 30720
sep #$20
lda #0
pha
rep #$20
pei (tcc__r0)
pea.w :bg2_m
pea.w bg2_m + 0
sep #$20
lda #1
pha
rep #$20
jsr.l bgInitMapSet
tsa
clc
adc #10
tas
lda.w #:bg2_tiles_end
sta.b tcc__r0h
lda.w #bg2_tiles_end + 0
sta.b tcc__r0
lda.w #:bg2_tiles
lda.w #bg2_tiles + 0
sta.b tcc__r1
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
lda.w #:bg2_p_end
lda.w #bg2_p_end + 0
sta.b tcc__r1
lda.w #:bg2_p
lda.w #bg2_p + 0
sta.b tcc__r2
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
pea.w 4096
pea.w 16
pei (tcc__r1)
pei (tcc__r0)
sep #$20
lda #2
pha
rep #$20
pea.w :bg2_p
pea.w bg2_p + 0
pea.w :bg2_tiles
pea.w bg2_tiles + 0
sep #$20
lda #1
pha
rep #$20
jsr.l bgInitTileSet
tsa
clc
adc #18
tas
lda.w #:bg3_tiles_end
sta.b tcc__r0h
lda.w #bg3_tiles_end + 0
sta.b tcc__r0
lda.w #:bg3_tiles
lda.w #bg3_tiles + 0
sta.b tcc__r1
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
lda.w #:bg3_p_end
lda.w #bg3_p_end + 0
sta.b tcc__r1
lda.w #:bg3_p
lda.w #bg3_p + 0
sta.b tcc__r2
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
pea.w 8192
pea.w 4
pei (tcc__r1)
pei (tcc__r0)
sep #$20
lda #0
pha
rep #$20
pea.w :bg3_p
pea.w bg3_p + 0
pea.w :bg3_tiles
pea.w bg3_tiles + 0
sep #$20
lda #2
pha
rep #$20
jsr.l bgInitTileSet
tsa
clc
adc #18
tas
sep #$20
lda #0
pha
rep #$20
pea.w 31744
sep #$20
lda #2
pha
rep #$20
jsr.l bgSetMapPtr
tsa
clc
adc #4
tas
lda.w #:font_tiles_end
lda.w #font_tiles_end + 0
sta.b tcc__r0
lda.w #:font_tiles
lda.w #font_tiles + 0
sta.b tcc__r1
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
pea.w 9984
pei (tcc__r0)
pea.w :font_tiles
pea.w font_tiles + 0
sep #$20
lda #2
pha
rep #$20
jsr.l bgInitTileSetData
tsa
clc
adc #9
tas
jsr.l drawMenu
jsr.l initMenu
jsr.l initBSTime
jsr.l bsTimeReset
jsr.l playMusic
pea.w (8 * 256 + 1)
sep #$20
rep #$20
jsr.l setMode
pla
pea.w 65535
pea.w 0
sep #$20
lda #0
pha
rep #$20
jsr.l bgSetScroll
tsa
clc
adc #5
tas
pea.w 65535
pea.w 0
sep #$20
lda #1
pha
rep #$20
jsr.l bgSetScroll
tsa
clc
adc #5
tas
pea.w 65535
pea.w 0
sep #$20
lda #2
pha
rep #$20
jsr.l bgSetScroll
tsa
clc
adc #5
tas
jsr.l initTrain
jsr.l loadSprites
jsr.l drawTrain
sep #$20
lda #2
pha
rep #$20
jsr.l setFadeEffect
tsa
clc
adc #1
tas
jsr.l initScrollingEffect
__local_1:
jsr.l dmaMenu
jsr.l updateSeaWaves
jsr.l dmaSeaWaves
jsr.l updateScrollingEffect
jsr.l updateTrain
jsr.l drawTrain
jsr.l animateTrain
lda.w #0
sep #$20
lda.l showTime + 0
rep #$20
sta.b tcc__r0
lda.b tcc__r0 ; DON'T OPTIMIZE
bne +
brl __local_0
+
pea.w :bstime
pea.w bstime + 0
jsr.l bsTimeUpdate
tsa
clc
adc #4
tas
jsr.l printDate
jsr.l printTime
__local_0:
jsr.l readInputs
jsr.l vblank
bra __local_1
lda.w #0
sta.b tcc__r0
__local_2:
.ifgr __main_locals 0
tsa
clc
adc #__main_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ram{WLA_FILENAME}.data" APPENDTO "globram.data"

music dsb 1
seaFrame dsb 1
seaState dsb 1
selectedOption dsb 1
showTime dsb 1

.ENDS

.SECTION "{WLA_FILENAME}.data" APPENDTO "glob.data"

.db $0
.db $0
.db $0
.db $2
.db $0
.ENDS

.SECTION ".rodata" SUPERFREE

.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
bstime dsb 6
train dsb 8
pad0 dsb 2
padA dsb 1
padUp dsb 1
padDown dsb 1
.ENDS
