.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __drawMenuOption1_locals 0
.define __drawMenuOption2_locals 0
.define __drawMenuOption3_locals 0
.define __drawMenu_locals 0
.define __initMenu_locals 0
.define __dmaMenu_locals 0
.define __readInputs_locals 0
.define __printValue_locals 2

.SECTION ".drawMenuOption1text_0x0" SUPERFREE

drawMenuOption1:
; sub sp,#__drawMenuOption1_locals
.ifgr __drawMenuOption1_locals 0
tsa
sec
sbc #__drawMenuOption1_locals
tas
.endif
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #1088,tcc__r0
lda.w #1088
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [ramAddress,0]
lda.b tcc__r0
sta.l ramAddress + 0
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [showTime + 0], tcc__r0
lda.w #0
sep #$20
lda.l showTime + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 609 ind 609
; gsym_addr t 0 a 644 ind 644
; ERROR no jump found to patch
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 761 ind 761
; cmp op 0x95 inv 1 v 243 r 761
; cmp ne
bne +
; gsym_addr t 0 a 845 ind 845
; ERROR no jump found to patch
brl __local_0
+
; gtst finished; t 761
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #128,tcc__r0
lda.w #128
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [shift,0]
lda.b tcc__r0
sta.l shift + 0
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 1372 ind 1372
; gsym_addr t 0 a 1409 ind 1409
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 1497 ind 1497
; cmp op 0x95 inv 1 v 243 r 1497
; cmp ne
bne +
; gsym_addr t 0 a 1584 ind 1584
brl __local_1
+
; gtst finished; t 1497
; load 0
; type 16 reg 0x3f0 extra 0x505
; ld2 [shift + 0], tcc__r0
lda.l shift + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #512
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [shift,0]
lda.b tcc__r0
sta.l shift + 0
__local_1:
; gsym_addr t 1497 a 2011 ind 2011
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
__local_4:
; load 0
; type 16 reg 0x3f0 extra 0xe33b0c40
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #128
ldx #1
lda.b tcc__r0
sec
sbc.w #128
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 2421 ind 2421
; gsym_addr t 0 a 2458 ind 2458
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 2546 ind 2546
; cmp op 0x95 inv 1 v 243 r 2546
; cmp ne
bne +
; gsym_addr t 0 a 2633 ind 2633
brl __local_2
+
; gtst finished; t 2546
; gjmp_addr 0 at 2705
jmp.w __local_3
; gsym_addr t 2705 a 0 ind 2743
__local_5:
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
; gjmp_addr 2209 at 3097
jmp.w __local_4
; gsym_addr t 3097 a 2209 ind 3138
__local_3:
; gsym_addr t 2705 a 3173 ind 3173
; load 0
; type 16 reg 0x3f0 extra 0xb9b90000
; ld2 [shift + 0], tcc__r0
lda.l shift + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0xb9b90000
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x84)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 132 reg 0x12f0 extra 0x0
; ld4 #bg3_m + 0, tcc__r1 (type 0x84)
lda.w #:bg3_m
sta.b tcc__r1h
lda.w #bg3_m + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x84 c 0 r type 0x10)
; length xxy 4 vtop->type 0x84
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 16 reg 0x101 extra 0x0
; ld2 [tcc__r1,0],tcc__r0
lda.b [tcc__r1]
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [value16,0]
lda.b tcc__r0
sta.l value16 + 0
; load 0
; type 16 reg 0x3f0 extra 0xb9bb7470
; ld2 [ramAddress + 0], tcc__r0
lda.l ramAddress + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x4)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #4096
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0xb9bb7470
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x4)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op 0xcd
; shr tcc__r0, #1
lsr.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #1
asl.b tcc__r0
; load 1
; type 4 reg 0x2f0 extra 0xe33ac120
; ld4 #wram7f + 0, tcc__r1 (type 0x4)
lda.w #:wram7f
sta.b tcc__r1h
lda.w #wram7f + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [value16 + 0], tcc__r0
lda.l value16 + 0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x10 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; gjmp_addr 2775 at 5210
jmp.w __local_5
; gsym_addr t 5210 a 2775 ind 5251
__local_2:
; gsym_addr t 2546 a 5286 ind 5286
; gsym_addr t 0 a 2775 ind 5321
; gjmp_addr 0 at 5353
jmp.w __local_6
; gsym_addr t 5353 a 0 ind 5391
__local_0:
; gsym_addr t 761 a 5423 ind 5423
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #256,tcc__r0
lda.w #256
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [shift,0]
lda.b tcc__r0
sta.l shift + 0
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 5884 ind 5884
; gsym_addr t 0 a 5921 ind 5921
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 6009 ind 6009
; cmp op 0x95 inv 1 v 243 r 6009
; cmp ne
bne +
; gsym_addr t 0 a 6096 ind 6096
brl __local_7
+
; gtst finished; t 6009
; load 0
; type 16 reg 0x3f0 extra 0x505
; ld2 [shift + 0], tcc__r0
lda.l shift + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #512
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [shift,0]
lda.b tcc__r0
sta.l shift + 0
__local_7:
; gsym_addr t 6009 a 6523 ind 6523
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
__local_10:
; load 0
; type 16 reg 0x3f0 extra 0xe33b0c40
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #128
ldx #1
lda.b tcc__r0
sec
sbc.w #128
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 6933 ind 6933
; gsym_addr t 0 a 6970 ind 6970
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 7058 ind 7058
; cmp op 0x95 inv 1 v 243 r 7058
; cmp ne
bne +
; gsym_addr t 0 a 7145 ind 7145
brl __local_8
+
; gtst finished; t 7058
; gjmp_addr 0 at 7217
jmp.w __local_9
; gsym_addr t 7217 a 0 ind 7255
__local_11:
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
; gjmp_addr 6721 at 7609
jmp.w __local_10
; gsym_addr t 7609 a 6721 ind 7651
__local_9:
; gsym_addr t 7217 a 7686 ind 7686
; load 0
; type 16 reg 0x3f0 extra 0x1
; ld2 [shift + 0], tcc__r0
lda.l shift + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x1
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x84)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 132 reg 0x12f0 extra 0x0
; ld4 #bg3_m + 0, tcc__r1 (type 0x84)
lda.w #:bg3_m
sta.b tcc__r1h
lda.w #bg3_m + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x84 c 0 r type 0x10)
; length xxy 4 vtop->type 0x84
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 16 reg 0x101 extra 0x0
; ld2 [tcc__r1,0],tcc__r0
lda.b [tcc__r1]
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [value16,0]
lda.b tcc__r0
sta.l value16 + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [ramAddress + 0], tcc__r0
lda.l ramAddress + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x4)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #4096
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x4)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op 0xcd
; shr tcc__r0, #1
lsr.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #1
asl.b tcc__r0
; load 1
; type 4 reg 0x2f0 extra 0xe33ac120
; ld4 #wram7f + 0, tcc__r1 (type 0x4)
lda.w #:wram7f
sta.b tcc__r1h
lda.w #wram7f + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [value16 + 0], tcc__r0
lda.l value16 + 0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x10 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; gjmp_addr 7287 at 9695
jmp.w __local_11
; gsym_addr t 9695 a 7287 ind 9737
__local_8:
; gsym_addr t 7058 a 9772 ind 9772
; gsym_addr t 0 a 7287 ind 9807
__local_6:
; gsym_addr t 5353 a 9839 ind 9839
; gsym_addr t 0 a 9874 ind 9874
; add sp, #__drawMenuOption1_locals
.ifgr __drawMenuOption1_locals 0
tsa
clc
adc #__drawMenuOption1_locals
tas
.endif
rtl
.ENDS

.SECTION ".drawMenuOption2text_0x1" SUPERFREE

drawMenuOption2:
; sub sp,#__drawMenuOption2_locals
.ifgr __drawMenuOption2_locals 0
tsa
sec
sbc #__drawMenuOption2_locals
tas
.endif
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #1216,tcc__r0
lda.w #1216
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [ramAddress,0]
lda.b tcc__r0
sta.l ramAddress + 0
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #384,tcc__r0
lda.w #384
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [shift,0]
lda.b tcc__r0
sta.l shift + 0
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 10830 ind 10830
; gsym_addr t 0 a 10869 ind 10869
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 10959 ind 10959
; cmp op 0x95 inv 1 v 243 r 10959
; cmp ne
bne +
; gsym_addr t 0 a 11049 ind 11049
brl __local_12
+
; gtst finished; t 10959
; load 0
; type 16 reg 0x3f0 extra 0x505
; ld2 [shift + 0], tcc__r0
lda.l shift + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #512
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [shift,0]
lda.b tcc__r0
sta.l shift + 0
__local_12:
; gsym_addr t 10959 a 11480 ind 11480
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
__local_15:
; load 0
; type 16 reg 0x3f0 extra 0xe33b0c40
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #128
ldx #1
lda.b tcc__r0
sec
sbc.w #128
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 11893 ind 11893
; gsym_addr t 0 a 11932 ind 11932
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 12022 ind 12022
; cmp op 0x95 inv 1 v 243 r 12022
; cmp ne
bne +
; gsym_addr t 0 a 12112 ind 12112
brl __local_13
+
; gtst finished; t 12022
; gjmp_addr 0 at 12188
jmp.w __local_14
; gsym_addr t 12188 a 0 ind 12228
__local_16:
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
; gjmp_addr 11681 at 12584
jmp.w __local_15
; gsym_addr t 12584 a 11681 ind 12628
__local_14:
; gsym_addr t 12188 a 12666 ind 12666
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [shift + 0], tcc__r0
lda.l shift + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x84)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 132 reg 0x12f0 extra 0x0
; ld4 #bg3_m + 0, tcc__r1 (type 0x84)
lda.w #:bg3_m
sta.b tcc__r1h
lda.w #bg3_m + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x84 c 0 r type 0x10)
; length xxy 4 vtop->type 0x84
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 16 reg 0x101 extra 0x0
; ld2 [tcc__r1,0],tcc__r0
lda.b [tcc__r1]
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [value16,0]
lda.b tcc__r0
sta.l value16 + 0
; load 0
; type 16 reg 0x3f0 extra 0x6c7fe650
; ld2 [ramAddress + 0], tcc__r0
lda.l ramAddress + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x4)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #4096
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x6c7fe650
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x4)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op 0xcd
; shr tcc__r0, #1
lsr.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #1
asl.b tcc__r0
; load 1
; type 4 reg 0x2f0 extra 0xe33ac120
; ld4 #wram7f + 0, tcc__r1 (type 0x4)
lda.w #:wram7f
sta.b tcc__r1h
lda.w #wram7f + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [value16 + 0], tcc__r0
lda.l value16 + 0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x10 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; gjmp_addr 12262 at 14692
jmp.w __local_16
; gsym_addr t 14692 a 12262 ind 14736
__local_13:
; gsym_addr t 12022 a 14774 ind 14774
; gsym_addr t 0 a 12262 ind 14812
; gsym_addr t 0 a 14846 ind 14846
; add sp, #__drawMenuOption2_locals
.ifgr __drawMenuOption2_locals 0
tsa
clc
adc #__drawMenuOption2_locals
tas
.endif
rtl
.ENDS

.SECTION ".drawMenuOption3text_0x2" SUPERFREE

drawMenuOption3:
; sub sp,#__drawMenuOption3_locals
.ifgr __drawMenuOption3_locals 0
tsa
sec
sbc #__drawMenuOption3_locals
tas
.endif
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #1344,tcc__r0
lda.w #1344
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [ramAddress,0]
lda.b tcc__r0
sta.l ramAddress + 0
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #512,tcc__r0
lda.w #512
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [shift,0]
lda.b tcc__r0
sta.l shift + 0
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc #3
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 15804 ind 15804
; gsym_addr t 0 a 15843 ind 15843
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 15933 ind 15933
; cmp op 0x95 inv 1 v 243 r 15933
; cmp ne
bne +
; gsym_addr t 0 a 16023 ind 16023
brl __local_17
+
; gtst finished; t 15933
; load 0
; type 16 reg 0x3f0 extra 0x505
; ld2 [shift + 0], tcc__r0
lda.l shift + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #512
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [shift,0]
lda.b tcc__r0
sta.l shift + 0
__local_17:
; gsym_addr t 15933 a 16454 ind 16454
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
__local_20:
; load 0
; type 16 reg 0x3f0 extra 0xe33b0c40
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #128
ldx #1
lda.b tcc__r0
sec
sbc.w #128
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 16867 ind 16867
; gsym_addr t 0 a 16906 ind 16906
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 16996 ind 16996
; cmp op 0x95 inv 1 v 243 r 16996
; cmp ne
bne +
; gsym_addr t 0 a 17086 ind 17086
brl __local_18
+
; gtst finished; t 16996
; gjmp_addr 0 at 17162
jmp.w __local_19
; gsym_addr t 17162 a 0 ind 17202
__local_21:
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
; gjmp_addr 16655 at 17558
jmp.w __local_20
; gsym_addr t 17558 a 16655 ind 17602
__local_19:
; gsym_addr t 17162 a 17640 ind 17640
; load 0
; type 16 reg 0x3f0 extra 0x1
; ld2 [shift + 0], tcc__r0
lda.l shift + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x1
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x84)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 132 reg 0x12f0 extra 0x0
; ld4 #bg3_m + 0, tcc__r1 (type 0x84)
lda.w #:bg3_m
sta.b tcc__r1h
lda.w #bg3_m + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x84 c 0 r type 0x10)
; length xxy 4 vtop->type 0x84
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 16 reg 0x101 extra 0x0
; ld2 [tcc__r1,0],tcc__r0
lda.b [tcc__r1]
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [value16,0]
lda.b tcc__r0
sta.l value16 + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [ramAddress + 0], tcc__r0
lda.l ramAddress + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x4)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #4096
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x4)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op 0xcd
; shr tcc__r0, #1
lsr.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #1
asl.b tcc__r0
; load 1
; type 4 reg 0x2f0 extra 0xe33ac120
; ld4 #wram7f + 0, tcc__r1 (type 0x4)
lda.w #:wram7f
sta.b tcc__r1h
lda.w #wram7f + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [value16 + 0], tcc__r0
lda.l value16 + 0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x10 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; gjmp_addr 17236 at 19652
jmp.w __local_21
; gsym_addr t 19652 a 17236 ind 19696
__local_18:
; gsym_addr t 16996 a 19734 ind 19734
; gsym_addr t 0 a 17236 ind 19772
; gsym_addr t 0 a 19806 ind 19806
; add sp, #__drawMenuOption3_locals
.ifgr __drawMenuOption3_locals 0
tsa
clc
adc #__drawMenuOption3_locals
tas
.endif
rtl
.ENDS

.SECTION ".drawMenutext_0x3" SUPERFREE

drawMenu:
; sub sp,#__drawMenu_locals
.ifgr __drawMenu_locals 0
tsa
sec
sbc #__drawMenu_locals
tas
.endif
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
__local_24:
; load 0
; type 16 reg 0x3f0 extra 0xe33b0c40
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #2048
ldx #1
lda.b tcc__r0
sec
sbc.w #2048
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 20492 ind 20492
; gsym_addr t 0 a 20531 ind 20531
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 20621 ind 20621
; cmp op 0x95 inv 1 v 243 r 20621
; cmp ne
bne +
; gsym_addr t 0 a 20711 ind 20711
brl __local_22
+
; gtst finished; t 20621
; gjmp_addr 0 at 20787
jmp.w __local_23
; gsym_addr t 20787 a 0 ind 20827
__local_25:
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x108
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
; gjmp_addr 20278 at 21288
jmp.w __local_24
; gsym_addr t 21288 a 20278 ind 21332
__local_23:
; gsym_addr t 20787 a 21370 ind 21370
; load 0
; type 4 reg 0x52f0 extra 0x6c7fe950
; ld4 #wram7f + 4096, tcc__r0 (type 0x4)
lda.w #:wram7f
sta.b tcc__r0h
lda.w #wram7f + 4096
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x6c7feb50
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x1000
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; gjmp_addr 20861 at 22014
jmp.w __local_25
; gsym_addr t 22014 a 20861 ind 22058
__local_22:
; gsym_addr t 20621 a 22096 ind 22096
; gsym_addr t 0 a 20861 ind 22134
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #1024,tcc__r0
lda.w #1024
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [ramAddress,0]
lda.b tcc__r0
sta.l ramAddress + 0
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
__local_28:
; load 0
; type 16 reg 0x3f0 extra 0xe33b0c40
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #64
ldx #1
lda.b tcc__r0
sec
sbc.w #64
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 22728 ind 22728
; gsym_addr t 0 a 22767 ind 22767
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 22857 ind 22857
; cmp op 0x95 inv 1 v 243 r 22857
; cmp ne
bne +
; gsym_addr t 0 a 22947 ind 22947
brl __local_26
+
; gtst finished; t 22857
; gjmp_addr 0 at 23023
jmp.w __local_27
; gsym_addr t 23023 a 0 ind 23063
__local_29:
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x108
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
; gjmp_addr 22518 at 23524
jmp.w __local_28
; gsym_addr t 23524 a 22518 ind 23568
__local_27:
; gsym_addr t 23023 a 23606 ind 23606
; load 0
; type 132 reg 0x12f0 extra 0x0
; ld4 #bg3_m + 0, tcc__r0 (type 0x84)
lda.w #:bg3_m
sta.b tcc__r0h
lda.w #bg3_m + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x6c7fe6b0
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x84 c 0 r type 0x11)
; length xxy 4 vtop->type 0x84
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 17 reg 0x5100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
sta.b tcc__r1
; store r 0x1 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r1, [value,0]
sep #$20
lda.b tcc__r1
sta.l value + 0
rep #$20
; load 0
; type 4 reg 0x52f0 extra 0x6c7fe950
; ld4 #wram7f + 4096, tcc__r0 (type 0x4)
lda.w #:wram7f
sta.b tcc__r0h
lda.w #wram7f + 4096
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x6c7feb50
; ld2 [ramAddress + 0], tcc__r1
lda.l ramAddress + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x6c7feb50
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 17 reg 0x53f0 extra 0x0
; ld1 [value + 0], tcc__r1
lda.w #0
sep #$20
lda.l value + 0
rep #$20
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x1000
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; gjmp_addr 23097 at 25206
jmp.w __local_29
; gsym_addr t 25206 a 23097 ind 25250
__local_26:
; gsym_addr t 22857 a 25288 ind 25288
; gsym_addr t 0 a 23097 ind 25326
; call r 0x2f0
jsr.l drawMenuOption1
; call r 0x2f0
jsr.l drawMenuOption2
; call r 0x2f0
jsr.l drawMenuOption3
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #1472,tcc__r0
lda.w #1472
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [ramAddress,0]
lda.b tcc__r0
sta.l ramAddress + 0
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
__local_32:
; load 0
; type 16 reg 0x3f0 extra 0xe33b0c40
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, #64
ldx #1
lda.b tcc__r0
sec
sbc.w #64
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 26031 ind 26031
; gsym_addr t 0 a 26070 ind 26070
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 26160 ind 26160
; cmp op 0x95 inv 1 v 243 r 26160
; cmp ne
bne +
; gsym_addr t 0 a 26250 ind 26250
brl __local_30
+
; gtst finished; t 26160
; gjmp_addr 0 at 26326
jmp.w __local_31
; gsym_addr t 26326 a 0 ind 26366
__local_33:
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [i + 0], tcc__r0
lda.l i + 0
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x108
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [i,0]
lda.b tcc__r0
sta.l i + 0
; gjmp_addr 25821 at 26827
jmp.w __local_32
; gsym_addr t 26827 a 25821 ind 26871
__local_31:
; gsym_addr t 26326 a 26909 ind 26909
; load 0
; type 132 reg 0x12f0 extra 0x0
; ld4 #bg3_m + 64, tcc__r0 (type 0x84)
lda.w #:bg3_m
sta.b tcc__r0h
lda.w #bg3_m + 64
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x6c7fe6b0
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x84 c 64 r type 0x11)
; length xxy 4 vtop->type 0x84
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 17 reg 0x5100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
sta.b tcc__r1
; store r 0x1 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r1, [value,0]
sep #$20
lda.b tcc__r1
sta.l value + 0
rep #$20
; load 0
; type 4 reg 0x52f0 extra 0x6c7fe950
; ld4 #wram7f + 4096, tcc__r0 (type 0x4)
lda.w #:wram7f
sta.b tcc__r0h
lda.w #wram7f + 4096
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x6c7feb50
; ld2 [ramAddress + 0], tcc__r1
lda.l ramAddress + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x6c7feb50
; ld2 [i + 0], tcc__r1
lda.l i + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 17 reg 0x53f0 extra 0x0
; ld1 [value + 0], tcc__r1
lda.w #0
sep #$20
lda.l value + 0
rep #$20
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x1000
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; gjmp_addr 26400 at 28512
jmp.w __local_33
; gsym_addr t 28512 a 26400 ind 28556
__local_30:
; gsym_addr t 26160 a 28594 ind 28594
; gsym_addr t 0 a 26400 ind 28632
; gsym_addr t 0 a 28666 ind 28666
; add sp, #__drawMenu_locals
.ifgr __drawMenu_locals 0
tsa
clc
adc #__drawMenu_locals
tas
.endif
rtl
.ENDS

.SECTION ".initMenutext_0x4" SUPERFREE

initMenu:
; sub sp,#__initMenu_locals
.ifgr __initMenu_locals 0
tsa
sec
sbc #__initMenu_locals
tas
.endif
; push2 imm r 0xf0
pea.w 2048
; push2 imm r 0xf0
pea.w 31744
; push4 imm r 0x52f0
pea.w :wram7f
pea.w wram7f + 4096
; call r 0x2f0
jsr.l dmaCopyVram
; add sp, #8
tsa
clc
adc #8
tas
; gsym_addr t 0 a 29135 ind 29135
; add sp, #__initMenu_locals
.ifgr __initMenu_locals 0
tsa
clc
adc #__initMenu_locals
tas
.endif
rtl
.ENDS

.SECTION ".dmaMenutext_0x5" SUPERFREE

dmaMenu:
; sub sp,#__dmaMenu_locals
.ifgr __dmaMenu_locals 0
tsa
sec
sbc #__dmaMenu_locals
tas
.endif
; push2 imm r 0xf0
pea.w 512
; push2 imm r 0xf0
pea.w 32256
; push4 imm r 0x52f0
pea.w :wram7f
pea.w wram7f + 5120
; call r 0x2f0
jsr.l dmaCopyVram
; add sp, #8
tsa
clc
adc #8
tas
; gsym_addr t 0 a 29598 ind 29598
; add sp, #__dmaMenu_locals
.ifgr __dmaMenu_locals 0
tsa
clc
adc #__dmaMenu_locals
tas
.endif
rtl
.ENDS

.SECTION ".readInputstext_0x6" SUPERFREE

readInputs:
; sub sp,#__readInputs_locals
.ifgr __readInputs_locals 0
tsa
sec
sbc #__readInputs_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [pad_keys + 0], tcc__r0
lda.l pad_keys + 0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [pad0,0]
lda.b tcc__r0
sta.l pad0 + 0
; load 0
; type 16 reg 0x3f0 extra 0x2
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #2048
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 30346 ind 30346
; gsym_addr t 0 a 30385 ind 30385
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 30475 ind 30475
; cmp op 0x95 inv 1 v 243 r 30475
; cmp ne
bne +
; gsym_addr t 0 a 30565 ind 30565
brl __local_34
+
; gtst finished; t 30475
; gtst inv 1 t 0 v 240 r 30641 ind 30641
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [padUp + 0], tcc__r0
lda.w #0
sep #$20
lda.l padUp + 0
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 30806 ind 30806
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 30896 ind 30896
; cmp op 0x95 inv 1 v 243 r 30896
; cmp ne
bne +
; gsym_addr t 0 a 30986 ind 30986
brl __local_35
+
; gtst finished; t 30896
; gtst inv 1 t 0 v 244 r 31062 ind 31062
; VT_jmp r 31062 t 0 ji 0 inv 1 vtop->c.i 30896
; gjmp_addr 0 at 31151
jmp.w __local_36
; gsym_addr t 31151 a 0 ind 31191
__local_35:
; gsym_addr t 30896 a 31225 ind 31225
; gtst finished; t 31151
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [padUp,0]
sep #$20
lda.b tcc__r0
sta.l padUp + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc.w #1
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 31761 ind 31761
; gsym_addr t 0 a 31800 ind 31800
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 31890 ind 31890
; cmp op 0x95 inv 1 v 243 r 31890
; cmp ne
bne +
; gsym_addr t 0 a 31980 ind 31980
brl __local_37
+
; gtst finished; t 31890
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [selectedOption,0]
sep #$20
lda.b tcc__r0
sta.l selectedOption + 0
rep #$20
; gjmp_addr 0 at 32578
jmp.w __local_38
; gsym_addr t 32578 a 0 ind 32618
__local_37:
; gsym_addr t 31890 a 32652 ind 32652
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #3,tcc__r0
lda.w #3
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [selectedOption,0]
sep #$20
lda.b tcc__r0
sta.l selectedOption + 0
rep #$20
__local_38:
; gsym_addr t 32578 a 32898 ind 32898
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 33188 ind 33188
; gsym_addr t 0 a 33227 ind 33227
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 33317 ind 33317
; cmp op 0x95 inv 1 v 243 r 33317
; cmp ne
bne +
; gsym_addr t 0 a 33407 ind 33407
brl __local_39
+
; gtst finished; t 33317
; call r 0x2f0
jsr.l drawMenuOption1
; call r 0x2f0
jsr.l drawMenuOption2
__local_39:
; gsym_addr t 33317 a 33557 ind 33557
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 33847 ind 33847
; gsym_addr t 0 a 33886 ind 33886
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 33976 ind 33976
; cmp op 0x95 inv 1 v 243 r 33976
; cmp ne
bne +
; gsym_addr t 0 a 34066 ind 34066
brl __local_40
+
; gtst finished; t 33976
; call r 0x2f0
jsr.l drawMenuOption2
; call r 0x2f0
jsr.l drawMenuOption3
__local_40:
; gsym_addr t 33976 a 34216 ind 34216
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc #3
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 34506 ind 34506
; gsym_addr t 0 a 34545 ind 34545
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 34635 ind 34635
; cmp op 0x95 inv 1 v 243 r 34635
; cmp ne
bne +
; gsym_addr t 0 a 34725 ind 34725
brl __local_41
+
; gtst finished; t 34635
; call r 0x2f0
jsr.l drawMenuOption3
; call r 0x2f0
jsr.l drawMenuOption1
__local_41:
; gsym_addr t 34635 a 34875 ind 34875
; push2 imm r 0xf0
pea.w 0
; call r 0x2f0
jsr.l playSound
; add sp, #2
pla
__local_36:
; gsym_addr t 31151 a 34988 ind 34988
; gjmp_addr 0 at 35026
jmp.w __local_42
; gsym_addr t 35026 a 0 ind 35066
__local_34:
; gsym_addr t 30475 a 35100 ind 35100
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [padUp,0]
sep #$20
lda.b tcc__r0
sta.l padUp + 0
rep #$20
__local_42:
; gsym_addr t 35026 a 35328 ind 35328
; load 0
; type 16 reg 0x3f0 extra 0x6c7fefa8
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #1024
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 35633 ind 35633
; gsym_addr t 0 a 35672 ind 35672
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 35762 ind 35762
; cmp op 0x95 inv 1 v 243 r 35762
; cmp ne
bne +
; gsym_addr t 0 a 35852 ind 35852
brl __local_43
+
; gtst finished; t 35762
; gtst inv 1 t 0 v 240 r 35928 ind 35928
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [padDown + 0], tcc__r0
lda.w #0
sep #$20
lda.l padDown + 0
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 36097 ind 36097
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 36187 ind 36187
; cmp op 0x95 inv 1 v 243 r 36187
; cmp ne
bne +
; gsym_addr t 0 a 36277 ind 36277
brl __local_44
+
; gtst finished; t 36187
; gtst inv 1 t 0 v 244 r 36353 ind 36353
; VT_jmp r 36353 t 0 ji 0 inv 1 vtop->c.i 36187
; gjmp_addr 0 at 36442
jmp.w __local_45
; gsym_addr t 36442 a 0 ind 36482
__local_44:
; gsym_addr t 36187 a 36516 ind 36516
; gtst finished; t 36442
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [padDown,0]
sep #$20
lda.b tcc__r0
sta.l padDown + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc.w #3
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 37049 ind 37049
; gsym_addr t 0 a 37088 ind 37088
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 37178 ind 37178
; cmp op 0x95 inv 1 v 243 r 37178
; cmp ne
bne +
; gsym_addr t 0 a 37268 ind 37268
brl __local_46
+
; gtst finished; t 37178
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [selectedOption,0]
sep #$20
lda.b tcc__r0
sta.l selectedOption + 0
rep #$20
; gjmp_addr 0 at 37866
jmp.w __local_47
; gsym_addr t 37866 a 0 ind 37906
__local_46:
; gsym_addr t 37178 a 37940 ind 37940
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [selectedOption,0]
sep #$20
lda.b tcc__r0
sta.l selectedOption + 0
rep #$20
__local_47:
; gsym_addr t 37866 a 38186 ind 38186
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 38476 ind 38476
; gsym_addr t 0 a 38515 ind 38515
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 38605 ind 38605
; cmp op 0x95 inv 1 v 243 r 38605
; cmp ne
bne +
; gsym_addr t 0 a 38695 ind 38695
brl __local_48
+
; gtst finished; t 38605
; call r 0x2f0
jsr.l drawMenuOption1
; call r 0x2f0
jsr.l drawMenuOption2
__local_48:
; gsym_addr t 38605 a 38845 ind 38845
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc #3
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 39135 ind 39135
; gsym_addr t 0 a 39174 ind 39174
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 39264 ind 39264
; cmp op 0x95 inv 1 v 243 r 39264
; cmp ne
bne +
; gsym_addr t 0 a 39354 ind 39354
brl __local_49
+
; gtst finished; t 39264
; call r 0x2f0
jsr.l drawMenuOption2
; call r 0x2f0
jsr.l drawMenuOption3
__local_49:
; gsym_addr t 39264 a 39504 ind 39504
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 39794 ind 39794
; gsym_addr t 0 a 39833 ind 39833
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 39923 ind 39923
; cmp op 0x95 inv 1 v 243 r 39923
; cmp ne
bne +
; gsym_addr t 0 a 40013 ind 40013
brl __local_50
+
; gtst finished; t 39923
; call r 0x2f0
jsr.l drawMenuOption3
; call r 0x2f0
jsr.l drawMenuOption1
__local_50:
; gsym_addr t 39923 a 40163 ind 40163
; push2 imm r 0xf0
pea.w 0
; call r 0x2f0
jsr.l playSound
; add sp, #2
pla
__local_45:
; gsym_addr t 36442 a 40276 ind 40276
; gjmp_addr 0 at 40314
jmp.w __local_51
; gsym_addr t 40314 a 0 ind 40354
__local_43:
; gsym_addr t 35762 a 40388 ind 40388
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [padDown,0]
sep #$20
lda.b tcc__r0
sta.l padDown + 0
rep #$20
__local_51:
; gsym_addr t 40314 a 40620 ind 40620
; load 0
; type 16 reg 0x3f0 extra 0x6c7fefa8
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #128
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 40924 ind 40924
; gsym_addr t 0 a 40963 ind 40963
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 41053 ind 41053
; cmp op 0x95 inv 1 v 243 r 41053
; cmp ne
bne +
; gsym_addr t 0 a 41143 ind 41143
brl __local_52
+
; gtst finished; t 41053
; gtst inv 1 t 0 v 240 r 41219 ind 41219
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [padA + 0], tcc__r0
lda.w #0
sep #$20
lda.l padA + 0
rep #$20
sta.b tcc__r0
; gsym_addr t 0 a 41382 ind 41382
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 41472 ind 41472
; cmp op 0x95 inv 1 v 243 r 41472
; cmp ne
bne +
; gsym_addr t 0 a 41562 ind 41562
brl __local_53
+
; gtst finished; t 41472
; gtst inv 1 t 0 v 244 r 41638 ind 41638
; VT_jmp r 41638 t 0 ji 0 inv 1 vtop->c.i 41472
; gjmp_addr 0 at 41727
jmp.w __local_54
; gsym_addr t 41727 a 0 ind 41767
__local_53:
; gsym_addr t 41472 a 41801 ind 41801
; gtst finished; t 41727
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [padA,0]
sep #$20
lda.b tcc__r0
sta.l padA + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 42304 ind 42304
; gsym_addr t 0 a 42343 ind 42343
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 42433 ind 42433
; cmp op 0x95 inv 1 v 243 r 42433
; cmp ne
bne +
; gsym_addr t 0 a 42523 ind 42523
brl __local_55
+
; gtst finished; t 42433
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [showTime + 0], tcc__r0
lda.w #0
sep #$20
lda.l showTime + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 42839 ind 42839
; gsym_addr t 0 a 42878 ind 42878
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 42968 ind 42968
; cmp op 0x95 inv 1 v 243 r 42968
; cmp ne
bne +
; gsym_addr t 0 a 43058 ind 43058
brl __local_56
+
; gtst finished; t 42968
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [showTime,0]
sep #$20
lda.b tcc__r0
sta.l showTime + 0
rep #$20
; gjmp_addr 0 at 43330
jmp.w __local_57
; gsym_addr t 43330 a 0 ind 43370
__local_56:
; gsym_addr t 42968 a 43404 ind 43404
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [showTime,0]
sep #$20
lda.b tcc__r0
sta.l showTime + 0
rep #$20
__local_57:
; gsym_addr t 43330 a 43638 ind 43638
; call r 0x2f0
jsr.l drawMenuOption1
__local_55:
; gsym_addr t 42433 a 43713 ind 43713
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc #3
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 44003 ind 44003
; gsym_addr t 0 a 44042 ind 44042
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 44132 ind 44132
; cmp op 0x95 inv 1 v 243 r 44132
; cmp ne
bne +
; gsym_addr t 0 a 44222 ind 44222
brl __local_58
+
; gtst finished; t 44132
; push2 imm r 0xf0
pea.w 1
; call r 0x2f0
jsr.l playSound
; add sp, #2
pla
; push2 imm r 0xf0
pea.w 30
; push2 imm r 0xf0
pea.w 0
; call r 0x2f0
jsr.l spcFadeModuleVolume
; add sp, #4
tsa
clc
adc #4
tas
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l setFadeEffect
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l bsRebootBios
__local_58:
; gsym_addr t 44132 a 44650 ind 44650
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [selectedOption + 0], tcc__r0
lda.w #0
sep #$20
lda.l selectedOption + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 44940 ind 44940
; gsym_addr t 0 a 44979 ind 44979
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 45069 ind 45069
; cmp op 0x95 inv 1 v 243 r 45069
; cmp ne
bne +
; gsym_addr t 0 a 45159 ind 45159
brl __local_59
+
; gtst finished; t 45069
; push2 imm r 0xf0
pea.w 1
; call r 0x2f0
jsr.l playSound
; add sp, #2
pla
; push2 imm r 0xf0
pea.w 30
; push2 imm r 0xf0
pea.w 0
; call r 0x2f0
jsr.l spcFadeModuleVolume
; add sp, #4
tsa
clc
adc #4
tas
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l setFadeEffect
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l spcReset
; call r 0x2f0
jsr.l bsReturnToTown
__local_59:
; gsym_addr t 45069 a 45619 ind 45619
; push2 imm r 0xf0
pea.w 1
; call r 0x2f0
jsr.l playSound
; add sp, #2
pla
__local_54:
; gsym_addr t 41727 a 45732 ind 45732
; gjmp_addr 0 at 45770
jmp.w __local_60
; gsym_addr t 45770 a 0 ind 45810
__local_52:
; gsym_addr t 41053 a 45844 ind 45844
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [padA,0]
sep #$20
lda.b tcc__r0
sta.l padA + 0
rep #$20
__local_60:
; gsym_addr t 45770 a 46070 ind 46070
; gsym_addr t 0 a 46108 ind 46108
; add sp, #__readInputs_locals
.ifgr __readInputs_locals 0
tsa
clc
adc #__readInputs_locals
tas
.endif
rtl
.ENDS

.SECTION ".printValuetext_0x7" SUPERFREE

printValue:
; sub sp,#__printValue_locals
.ifgr __printValue_locals 0
tsa
sec
sbc #__printValue_locals
tas
.endif
; load 0
; type 16 reg 0x1f2 extra 0xe32fef40
; ld2 [sp,6],tcc__r0
; stack adjust: fc + disp - loc - 256 -247
lda 6 + __printValue_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0xe32fef40
; ld2 [sp,8],tcc__r1
; stack adjust: fc + disp - loc - 256 -245
lda 8 + __printValue_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 6 r type 0x0)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 6 r type 0x0)
; length xxy 2 vtop->type 0x10
dec.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 6 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #255
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0xffffffff
; st1 tcc__r0, [sp,-1]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -1 + __printValue_locals + 1,s
rep #$20
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda.w #0
sep #$20
lda 3 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op %
; div #10, tcc__r0
ldx.b tcc__r0
lda.w #10
jsr.l tcc__div
stx.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 3 r type 0x0)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.w #224
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -2 + __printValue_locals + 1,s
rep #$20
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,4],tcc__r0
; stack adjust: fc + disp - loc - 256 -248
lda 4 + __printValue_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 4 reg 0x52f0 extra 0x10
; ld4 #wram7f + 4096, tcc__r1 (type 0x4)
lda.w #:wram7f
sta.b tcc__r1h
lda.w #wram7f + 4096
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -253
lda.w #0
sep #$20
lda -1 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #1
asl.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x1000
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x1f2 extra 0x2e
; ld2 [sp,4],tcc__r0
; stack adjust: fc + disp - loc - 256 -248
lda 4 + __printValue_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 4 r type 0x0)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 4 reg 0x52f0 extra 0x1ae
; ld4 #wram7f + 4096, tcc__r1 (type 0x4)
lda.w #:wram7f
sta.b tcc__r1h
lda.w #wram7f + 4096
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -253
lda.w #0
sep #$20
lda -1 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #1
asl.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -2 r type 0x11)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.w #16
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x1000
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda.w #0
sep #$20
lda 3 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op /
; div #10, tcc__r0
ldx.b tcc__r0
lda.w #10
jsr.l tcc__div
lda.b tcc__r9
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0x3
; st1 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc - 256 -249
sep #$20
lda.b tcc__r0
sta 3 + __printValue_locals + 1,s
rep #$20
__local_62:
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda.w #0
sep #$20
lda 3 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 51555 ind 51555
; gsym_addr t 0 a 51594 ind 51594
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 51684 ind 51684
; cmp op 0x95 inv 1 v 243 r 51684
; cmp ne
bne +
; gsym_addr t 0 a 51774 ind 51774
brl __local_61
+
; gtst finished; t 51684
; load 0
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -253
lda.w #0
sep #$20
lda -1 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -1 r type 0x11)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xffffffff
; st1 tcc__r0, [sp,-1]
; stack adjust: fc + disp - loc - 256 -253
sep #$20
lda.b tcc__r0
sta -1 + __printValue_locals + 1,s
rep #$20
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda.w #0
sep #$20
lda 3 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op %
; div #10, tcc__r0
ldx.b tcc__r0
lda.w #10
jsr.l tcc__div
stx.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 3 r type 0x11)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.w #224
sta.b tcc__r0
; store r 0x0 fr 0x51f2 ft 0x11 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc - 256 -254
sep #$20
lda.b tcc__r0
sta -2 + __printValue_locals + 1,s
rep #$20
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,4],tcc__r0
; stack adjust: fc + disp - loc - 256 -248
lda 4 + __printValue_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 4 reg 0x52f0 extra 0x1
; ld4 #wram7f + 4096, tcc__r1 (type 0x4)
lda.w #:wram7f
sta.b tcc__r1h
lda.w #wram7f + 4096
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -253
lda.w #0
sep #$20
lda -1 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #1
asl.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x1000
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x1f2 extra 0x2e
; ld2 [sp,4],tcc__r0
; stack adjust: fc + disp - loc - 256 -248
lda 4 + __printValue_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 4 r type 0x0)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 4 reg 0x52f0 extra 0x2a
; ld4 #wram7f + 4096, tcc__r1 (type 0x4)
lda.w #:wram7f
sta.b tcc__r1h
lda.w #wram7f + 4096
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-1],tcc__r0
; stack adjust: fc + disp - loc - 256 -253
lda.w #0
sep #$20
lda -1 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #1
asl.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 4096 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 17 reg 0x51f2 extra 0x0
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc - 256 -254
lda.w #0
sep #$20
lda -2 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -2 r type 0x11)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.w #16
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x1000
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc - 256 -249
lda.w #0
sep #$20
lda 3 + __printValue_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op /
; div #10, tcc__r0
ldx.b tcc__r0
lda.w #10
jsr.l tcc__div
lda.b tcc__r9
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x11 fc 0x3
; st1 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc - 256 -249
sep #$20
lda.b tcc__r0
sta 3 + __printValue_locals + 1,s
rep #$20
; gjmp_addr 51236 at 56329
jmp.w __local_62
; gsym_addr t 56329 a 51236 ind 56373
__local_61:
; gsym_addr t 51684 a 56411 ind 56411
; gsym_addr t 0 a 51236 ind 56449
; gsym_addr t 0 a 56483 ind 56483
; add sp, #__printValue_locals
.ifgr __printValue_locals 0
tsa
clc
adc #__printValue_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ram{WLA_FILENAME}.data" APPENDTO "globram.data"

music dsb 1
seaFrame dsb 1
seaState dsb 1
selectedOption dsb 1
showTime dsb 1
maskPalette dsb 1
maskPaletteSelected dsb 1

.ENDS

.SECTION "{WLA_FILENAME}.data" APPENDTO "glob.data"

.db $0
.db $0
.db $0
.db $2
.db $0
.db $24
.db $28
.ENDS

.SECTION ".rodata" SUPERFREE

.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
bstime dsb 6
train dsb 8
pad0 dsb 2
padA dsb 1
padUp dsb 1
padDown dsb 1
ramAddress dsb 2
shift dsb 2
shift1 dsb 2
shift2 dsb 2
i dsb 2
value dsb 1
value16 dsb 2
mask dsb 1
.ENDS
